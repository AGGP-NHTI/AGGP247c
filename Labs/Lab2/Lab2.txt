AGGP 247
Lab 2

PART 1: 
	Create a "Grid2D" Class
	This class will be public

	MEMBERS: 
	You will have a Origin vector2 member. 
		your grid will be drawn using this point as the origin on the screen. 

	You will have 3 Color members, these will be your drawing colors
	AxisColor , Default White
	LineColor , Default Dark Gray
	DivisionColor, Default Yellow

	3 Floats for width for drawing 
	AxisWidth, Default 3
	LineWidth, Default 1, 
	DivisionWidth, Default 2

	Two Booleans
	IsDrawingAxis, Default true
	isDrawingDivsions, Default true
	isDrawingOrigin,  Default false

	GridSize, Float, default 10f
		The distance between Lines
		GridSize should never go below the largest Line Width
	DivisionCount, default 5
		On what lines over from the Axis should the Division lines should be drawn. 
	
	ScreenSize
		Vector2 that holds the size screen information	
		Initalize this in your constructors. 	

	METHODS
	Constructors

	public void Draw(Spritebatch)
		Draws a grid across the entire screen 
		Use the LineDrawer class provided to you to draw lines

	public Vector2 Grid2ScreenPoint(Vector2) 
		Parm:   Vector2 in Grid Space
		return: Vector2 in Screen Space 

	public void DrawLine(spritebatch, Line)	
		Parms: Spritebatch to draw with,
		Line with positions in Grid Space

	public void DrawLineObject(spritebatch, LineObject)	
		Parms: Spritebatch to draw with,
		LineObject with positions in Grid Space

* Add to DrawingTools:

public static float ToAngle(float radian) 
converts given radians into an angle value

public static float ToRadian(float angle)
converts given angle into a radian value

public static Vector2 CircleRadiusPoint(Vector2 Origin, float angle, float radius) 
this method finds a point on a circle given a radius and angle. 
This will place the point relative to the origin Vector 2. 
You will need to convert the given angle into a radian. 

public static void DrawCircle(SpriteBatch spriteBatch, float width, Color color, Vector2 Position, float Radius, int Sides)
Draws a Circle, 
Center of the circle is Position
If Sides < 3, make it something reasonable.
        
public static LineObject GenerateCircle(float width, Color color, float Radius, int Sides)
Generates a Line Object of a Circle
Local Center of the circle is 0,0
If Sides < 3, make it something reasonable. 


public static Vector2 EllipseRadiusPoint(Vector2 Origin, float angle, Vector2 Axis) 
Like CircleRadiusPoint, but scaling using the Axis Vector2 instead of the radius. 

public static void DrawEllipse(SpriteBatch spriteBatch, float width, Color color, Vector2 Position, Vector2 Axis, int Sides)
Draws an Ellipse, 
Center of the Ellipse is Position
If Sides < 3, make it something reasonable.
        
public static LineObject GenerateEllipse(float width, Color color, Vector2 Axis, int Sides)
Generates a Line Object of a Ellipse, 
Local Center of the circle is 0,0.
If Sides < 3, make it something reasonable. 
Axis Refers to the minor and major axis of the Ellipse for the X and Y Axis. 


* Create an Ellipse Class
The purpose of this class is to collect all of the information for an Ellipse in an stucture. 
Use the following public members
   	public Vector2 Position = Vector2.Zero;	
	public Vector2 Center = Vector2.Zero;
        public Vector2 Axis = Vector2.One;
        public float Roation = 0;
        public int Sides = 32;
        public float Width = 2.0f;
        public Color color = Color.White;

Create Constructors & Draw Methods

* Create a Circle Class
	This will Inherit from your Ellipse class. 
Create Constructors, but Leverage the Draw method 

Part 5:	

	Create an instance of your new Grid2D class
	Set the center point at the center of the Monogame window. 

	Use the MouseWheel to enlarge and shrink the gridsize, 
	Use the Middle Mouse button to place the grid origin at the current mouse location 
